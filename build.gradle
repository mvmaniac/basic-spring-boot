plugins {
  id 'org.springframework.boot' version '3.3.5'
  id 'io.spring.dependency-management' version '1.1.6'
  id 'java'
}

group = 'io.devfactory'
version = '0.0.1-SNAPSHOT'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

dependencies {
  // -Dmemory=on 옵션으로 확인
//  implementation files('libs/system-memory.jar')

  implementation 'org.springframework.boot:spring-boot-starter-aop'
  implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
  implementation 'org.springframework.boot:spring-boot-starter-web'
//  implementation 'org.springframework.boot:spring-boot-starter-jdbc' // jpa에서 jdbc를 포함하고 있기 때문에 주석
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'

  implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'

  // Querydsl 추가
  implementation "com.querydsl:querydsl-jpa:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
  annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
  annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
  annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

  runtimeOnly 'com.h2database:h2'

  implementation 'io.micrometer:micrometer-registry-prometheus'

  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
  testCompileOnly 'org.projectlombok:lombok'
  testAnnotationProcessor 'org.projectlombok:lombok'

  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
  useJUnitPlatform()
}

// https://docs.spring.io/spring-boot/docs/current/reference/html/configuration-metadata.html#appendix.configuration-metadata.annotation-processor.configuring
// tasks.named('compileJava') {
//  inputs.files(tasks.named('processResources'))
//}
tasks.named('compileJava') {
  dependsOn bootBuildInfo
  inputs.files(tasks.named('processResources'))
}

// /actuator/info 정보에 build 정보가 추가됨
// 버전 차이인지 모르겠지만 강의와 다르게 아래처럼 추가 설정 필요
// tasks.named('compileJava') {
//   dependsOn bootBuildInfo
// }
springBoot {
  buildInfo()
}

// Querydsl 추가, 자동 생성된 Q클래스 gradle clean으로 제거 (build and run 설정을 intellij로 쓸 경우)
clean {
  delete file('src/main/generated')
}
